# Generated by Django 5.1.2 on 2024-10-20 23:44

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('display_name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, default='', max_length=150, null=True)),
                ('host', models.CharField(blank=True, max_length=50, null=True)),
                ('github', models.CharField(blank=True, max_length=50, null=True)),
                ('profile_image', models.CharField(blank=True, max_length=100, null=True)),
                ('page', models.CharField(blank=True, max_length=100, null=True)),
                ('password', models.CharField(default='', max_length=50)),
                ('email', models.EmailField(default='example@example.com', max_length=50)),
                ('friends', models.ManyToManyField(blank=True, to='node.author')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('published', models.DateTimeField(auto_now_add=True, null=True)),
                ('text', models.TextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='node.author')),
            ],
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('object_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('liker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='node.author')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='node.comment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follower', models.CharField(max_length=200)),
                ('following', models.CharField(max_length=200)),
                ('approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'unique_together': {('follower', 'following')},
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='node.author')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('text_content', models.TextField(blank=True)),
                ('image_content', models.TextField(blank=True)),
                ('published', models.DateTimeField(auto_now_add=True)),
                ('visibility', models.TextField(default='PUBLIC', max_length=50)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='node.author')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='node.post'),
        ),
        migrations.CreateModel(
            name='PostLike',
            fields=[
                ('object_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('liker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='node.author')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='node.post')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Repost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shared_date', models.DateTimeField(auto_now_add=True)),
                ('original_post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='node.post')),
                ('shared_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='node.author')),
            ],
        ),
    ]
